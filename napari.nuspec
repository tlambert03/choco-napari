<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://chocolatey.org/docs/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://chocolatey.org/packages). -->

<!-- Test your packages in a test environment: https://github.com/chocolatey/chocolatey-test-environment -->

<!--
This is a nuspec. It mostly adheres to https://docs.nuget.org/create/Nuspec-Reference. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces 
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements 
-->

<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>napari</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.nuget.org/create/versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>0.4.2</version>
    <!-- <packageSourceUrl>Where is this Chocolatey package located (think GitHub)? packageSourceUrl is highly recommended for the community feed</packageSourceUrl>-->
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <!--<owners>__REPLACE_YOUR_NAME__</owners>-->
    <!-- ============================== -->

    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>napari (Install)</title>
    <authors>napari team</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://napari.org/</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/napari/napari/master/napari/resources/logo.png</iconUrl>
    <!-- <copyright>Year Software Vendor</copyright> -->
    <!-- If there is a license Url available, it is required for the community feed -->
    <licenseUrl>https://github.com/napari/napari/blob/master/LICENSE</licenseUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <projectSourceUrl>https://github.com/napari/napari/</projectSourceUrl>
    <docsUrl>https://napari.org/docs/</docsUrl>
    <!--<mailingListUrl></mailingListUrl>-->
    <bugTrackerUrl>https://github.com/napari/napari/issues</bugTrackerUrl>
    <tags>napari python image data visualization</tags>
    <summary>Multi-dimensional image viewer for Python</summary>
    <description>
      napari is a fast, interactive, multi-dimensional image viewer for Python. 
      It’s designed for browsing, annotating, and analyzing large multi-dimensional images.
      It’s built on top of Qt (for the GUI), vispy (for performant GPU-based rendering),
      and the scientific Python stack (numpy, scipy).
    </description>
    <releaseNotes>
      # napari 0.4.2

      We're happy to announce the release of napari 0.4.2!
      napari is a fast, interactive, multi-dimensional image viewer for Python.
      It's designed for browsing, annotating, and analyzing large multi-dimensional
      images. It's built on top of Qt (for the GUI), vispy (for performant GPU-based
      rendering), and the scientific Python stack (numpy, scipy).


      For more information, examples, and documentation, please visit our website:
      https://github.com/napari/napari

      ## Highlights

      This is an emergency patch release to fix a regression in `0.4.1` that broke
      magicgui generated dockwidgets which accepted layers as input (#1962). The
      release also contains a number of other bug fixes and improvements, notably
      a fix to a performance regression when adding many layers that came in the
      `0.3.6` release (#1945), and the beginning of adopting evented dataclasses
      for our model files, which will result in a dramatic simplification of that
      part of the codebase.

      ## Improvements
      - async-28: Misc Cleanup (#1900)
      - async-29: Shared Memory Server (#1909)
      - Use evented dataclass for axes (#1910)
      - Use evented dataclass for scalebar (#1911)
      - Use evented dataclass for cursor (#1912)
      - Use evented dataclass for grid (#1913)
      - Use evented dataclass for camera (#1914)
      - Use evented dataclass for colormap (#1916)
      - Remove add layers mixin (#1921)

      ## Bug Fixes
      - Fix performance issues 1 - adding layers (#1945)
      - Fix track labels lookup (#1946)
      - Update sliders when change scale of layer (#1951)
      - Fix evented dataclass for python 3.9 (#1958)
      - Refine TypedMutableSequence.__getitem__ error type, add magicgui tests (#1962)

      ## API Changes
      - ``Viewer.camera.ndisplay`` has been dropped. Instead, use
        ``Viewer.dims.ndisplay``. (#1914)

      ## Deprecations
      - All existing deprecations have been bumped by one release (#1963)

      ## Build Tools and Docs
      - Fix checks for running under cProfile and yappi (#1924)
      - Fix missing vispy.ext.six (#1930)
      - Replace calls to layer.shape in tests (#1938)
      - Add pims to bundle (#1939)
      - Register sync_only pytest mark to fix warning (#1941)
      - Don't run app bundling in forked repos (#1953)
      - Add tests for #1895 (#1961)


      ## 8 authors added to this release (alphabetical)

      - [Alan R Lowe](https://github.com/napari/napari/commits?author=quantumjot) - @quantumjot
      - [Draga Doncila Pop](https://github.com/napari/napari/commits?author=DragaDoncila) - @DragaDoncila
      - [Genevieve Buckley](https://github.com/napari/napari/commits?author=GenevieveBuckley) - @GenevieveBuckley
      - [Grzegorz Bokota](https://github.com/napari/napari/commits?author=Czaki) - @Czaki
      - [kir0ul](https://github.com/napari/napari/commits?author=kir0ul) - @kir0ul
      - [Lorenzo Gaifas](https://github.com/napari/napari/commits?author=brisvag) - @brisvag
      - [Nicholas Sofroniew](https://github.com/napari/napari/commits?author=sofroniewn) - @sofroniewn
      - [Philip Winston](https://github.com/napari/napari/commits?author=pwinston) - @pwinston
      - [Talley Lambert](https://github.com/napari/napari/commits?author=tlambert03) - @tlambert03


      ## 5 reviewers added to this release (alphabetical)

      - [Grzegorz Bokota](https://github.com/napari/napari/commits?author=Czaki) - @Czaki
      - [Juan Nunez-Iglesias](https://github.com/napari/napari/commits?author=jni) - @jni
      - [Nicholas Sofroniew](https://github.com/napari/napari/commits?author=sofroniewn) - @sofroniewn
      - [Philip Winston](https://github.com/napari/napari/commits?author=pwinston) - @pwinston
      - [Talley Lambert](https://github.com/napari/napari/commits?author=tlambert03) - @tlambert03
    </releaseNotes>

    <!-- =============================== -->      

    <!-- Specifying dependencies and version ranges? https://docs.nuget.org/create/versioning#specifying-version-ranges-in-.nuspec-files -->
    <!--<dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
      <dependency id="chocolatey-core.extension" version="1.1.0" />
    </dependencies>-->
    <!-- chocolatey-core.extension - https://chocolatey.org/packages/chocolatey-core.extension
         - You want to use Get-UninstallRegistryKey on less than 0.9.10 (in chocolateyUninstall.ps1)
         - You want to use Get-PackageParameters and on less than 0.11.0
         - You want to take advantage of other functions in the core community maintainer's team extension package
    -->

    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <files>
    <!-- this section controls what actually gets packaged into the Chocolatey package -->
    <file src="tools\**" target="tools" />
    <!--Building from Linux? You may need this instead: <file src="tools/**" target="tools" />-->
  </files>
</package>
